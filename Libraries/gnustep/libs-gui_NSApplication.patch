# Changes
# 2024-06-04  Sergii Stoian  <stoyan255@gmail.com>
#	* Deactivate application only if window manager accepted hide action.
#	* Change "Hide/Unhide" menu item title depending on app state.
#	* Call unhide: if hide: was called on hidden app. Actually it's always the case
#	  because menu item bound to -hide: method.

diff --git a/Source/NSApplication.m b/Source/NSApplication.m
index 1de44a1bd..9b631b110 100644
--- a/Source/NSApplication.m
+++ b/Source/NSApplication.m
@@ -2542,8 +2542,15 @@ image.</p><p>See Also: -applicationIconImage</p>
                   [_hidden addObject: win];
                   [win orderOut: self];
                 }
+              /*
+               * On hiding we also deactivate the application which will make
+               * the menus go away too.
+               */
+              [self deactivate];
+              _unhide_on_activation = YES;
             }
-	  _app_is_hidden = YES;
+          [[_main_menu itemWithTitle:@"Hide"] setTitle:@"Unhide"];
+          _app_is_hidden = YES;
 	  
 	  if (YES == [[NSUserDefaults standardUserDefaults]
 		       boolForKey: @"GSSuppressAppIcon"])
@@ -2564,14 +2571,7 @@ image.</p><p>See Also: -applicationIconImage</p>
 	    {
 	      [[_app_icon_window contentView] setNeedsDisplay: YES];
 	    }
-	  
-	  /*
-	   * On hiding we also deactivate the application which will make the menus
-	   * go away too.
-	   */
-	  [self deactivate];
-	  _unhide_on_activation = YES;
-	  
+ 
 	  info = [self _notificationUserInfo];
 	  [nc postNotificationName: NSApplicationDidHideNotification
 			    object: self
@@ -2589,6 +2589,10 @@ image.</p><p>See Also: -applicationIconImage</p>
 	  [self miniaturizeAll: sender];
 	}
     }
+  else
+    {
+      [self unhide: sender];
+    }
 #endif
 }
 
@@ -2605,6 +2609,7 @@ image.</p><p>See Also: -applicationIconImage</p>
  */
 - (void) unhide: (id)sender
 {
+  [[_main_menu itemWithTitle:@"Unhide"] setTitle:@"Hide"];
   if (_app_is_hidden)
     {
       [self unhideWithoutActivation];
